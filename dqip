import pandas as pd
import numpy as np

# reading csv
dq = pd.read_csv('/Users/othman/Downloads/Othman_covid19_cases_confirmed_2020-06-30 - covid19_cases_confirmed_2020-06.csv')

# Replace nan with "blanks"
dq1 = dq.replace(np.nan, 'blank', regex=True)

# create dummies
dq2 = pd.get_dummies(dq1, columns=["Sex", "Age", "Case classification",	"Investigation status",	"Outcome of case",	"Quarantine",
                                    "Admitted as inpatient?", "Present Condition of Person",
                                    "Left against medical advice",	"Traveled",
                                    "Direct contact with a confirmed case", "directcontactprobablecase",	"Symptomatic",	"First symptom",
                                    "Abdominal pain", "Chest pain", "Chills or sweats", "Confused or disoriented",
                                    "Cough", "Diarrhea", "Difficulty breathing/Dyspnea", "Fatigue/general weakness",
                                    "Fever", "Fluid in lung cavity in auscultation", "Fluid in cavity through X-Ray", "Headache",
                                    "Joint pain or arthritis", "Muscle pain", "Nausea", "Rapid breathing", "Runny nose",
                                    "Convulsions or Seizures", "Sore throat/pharyngitis", "Vomiting", "Abnormal lung X-Ray findings",
                                    "Acute respiratory distress syndrome", "Pneumonia (clinical or radiologic)", "Loss of Taste",
                                    "Loss of Smell", "Coughing up blood (haemoptysis)", "First Lab Result (Pathogentest)"])


# selecting subset
dq3 = dq2[['EPID number', 'Date of report (dd/MM/yy)', 'State', 'LGA', 'Sex_blank', 'Age_blank',
           'Case classification_CONFIRMED', 'Quarantine_blank', 'Admitted as inpatient?_blank',
           'Present Condition of Person_blank', 'Traveled_blank',
           'Direct contact with a confirmed case_blank', 'directcontactprobablecase_blank',
           'Abdominal pain_blank', 'Chest pain_blank', 'Chills or sweats_blank', 'Confused or disoriented_blank',
           'Cough_blank', 'Diarrhea_blank', 'Difficulty breathing/Dyspnea_blank', 'Fatigue/general weakness_blank',
           'Fever_blank', 'Fluid in lung cavity in auscultation_blank', 'Fluid in cavity through X-Ray_blank',
           'Headache_blank', 'Joint pain or arthritis_blank', 'Muscle pain_blank', 'Nausea_blank',
           'Rapid breathing_blank', 'Runny nose_blank', 'Convulsions or Seizures_blank', 'Sore throat/pharyngitis_blank', 'Vomiting_blank',
           'Abnormal lung X-Ray findings_blank', 'Acute respiratory distress syndrome_blank',
           'Pneumonia (clinical or radiologic)_blank', 'Loss of Taste_blank', 'Loss of Smell_blank',
           'Coughing up blood (haemoptysis)_blank', 'First Lab Result (Pathogentest)_blank']]

dq3['Date of report (dd/MM/yy)'] = pd.to_datetime(dq3['Date of report (dd/MM/yy)'])

dq3['Week_Number'] = dq3['Date of report (dd/MM/yy)'].dt.week

# Create pivot table, rows = week number and states, values = 35 priority columns, function = sum
dq4 = pd.pivot_table(dq3, index=["Week_Number", "State"], values=['Case classification_CONFIRMED', 'Sex_blank', 'Age_blank', 'Quarantine_blank', 'Admitted as inpatient?_blank',
           'Present Condition of Person_blank', 'Traveled_blank',
           'Direct contact with a confirmed case_blank', 'directcontactprobablecase_blank',
           'Abdominal pain_blank', 'Chest pain_blank', 'Chills or sweats_blank', 'Confused or disoriented_blank',
           'Cough_blank', 'Diarrhea_blank', 'Difficulty breathing/Dyspnea_blank', 'Fatigue/general weakness_blank',
           'Fever_blank', 'Fluid in lung cavity in auscultation_blank', 'Fluid in cavity through X-Ray_blank',
           'Headache_blank', 'Joint pain or arthritis_blank', 'Muscle pain_blank', 'Nausea_blank',
           'Rapid breathing_blank', 'Runny nose_blank', 'Convulsions or Seizures_blank', 'Sore throat/pharyngitis_blank', 'Vomiting_blank',
           'Abnormal lung X-Ray findings_blank', 'Acute respiratory distress syndrome_blank',
           'Pneumonia (clinical or radiologic)_blank', 'Loss of Taste_blank', 'Loss of Smell_blank',
           'Coughing up blood (haemoptysis)_blank', 'First Lab Result (Pathogentest)_blank'],aggfunc=np.sum).reset_index()

# Filter by week number e.g wk25
# wk = dq4.query('Week_Number == [25]')

# wk25.head()

# Or for multiple weeks use:

wk = dq4.query('Week_Number == [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]')

# Reorder columns
neworder_wk = ['Week_Number', 'State', 'Case classification_CONFIRMED', 'Sex_blank', 'Age_blank', 'Quarantine_blank', 'Admitted as inpatient?_blank',
           'Present Condition of Person_blank', 'Traveled_blank',
           'Direct contact with a confirmed case_blank', 'directcontactprobablecase_blank',
           'Abdominal pain_blank', 'Chest pain_blank', 'Chills or sweats_blank', 'Confused or disoriented_blank',
           'Cough_blank', 'Diarrhea_blank', 'Difficulty breathing/Dyspnea_blank', 'Fatigue/general weakness_blank',
           'Fever_blank', 'Fluid in lung cavity in auscultation_blank', 'Fluid in cavity through X-Ray_blank',
           'Headache_blank', 'Joint pain or arthritis_blank', 'Muscle pain_blank', 'Nausea_blank',
           'Rapid breathing_blank', 'Runny nose_blank', 'Convulsions or Seizures_blank', 'Sore throat/pharyngitis_blank', 'Vomiting_blank',
           'Abnormal lung X-Ray findings_blank', 'Acute respiratory distress syndrome_blank',
           'Pneumonia (clinical or radiologic)_blank', 'Loss of Taste_blank', 'Loss of Smell_blank',
           'Coughing up blood (haemoptysis)_blank', 'First Lab Result (Pathogentest)_blank']

wk = wk.reindex(columns=neworder_wk)

# Create total column and sum up 35 priority columns
wk['Total'] = wk.iloc[:,-35:].sum(axis=1)

#  Create % of Missing Values column
wk['Missing % (Net)'] = wk['Total']/wk['Case classification_CONFIRMED']/34*100

# Create Completeness column
wk['Completeness (Net)'] = 100 - wk['Missing % (Net)']

# National Average row to calculate the mean
wk.loc['National Average'] = wk.mean()

# Export csv
wk.to_csv("/Users/othman/Downloads/wkcl_update.csv")
